// -----------------------------------------------------------------------------
// This inline unit is generated by the Vellum ABI compiler.
// Include it in exactly one translation unit after providing the functions in
// `vellum_export`.
// -----------------------------------------------------------------------------

{% import "c++/_macros.hpp" as m %}

#include "{{ header_name }}"

#include <utility>

#undef VELLUM_ABI
#if defined(VELLUM_STATIC)
#  define VELLUM_ABI
#elif defined(_WIN32) || defined(__CYGWIN__)
#  define VELLUM_ABI __declspec(dllexport)
#else
#  define VELLUM_ABI __attribute__((visibility("default")))
#endif

namespace vellum_private_abi {
extern "C" {

{% for f in items.functions %}
{%- call m::docs("", f.docs) %}
VELLUM_ABI {{ f.returns|retty }} {{ f.name }}(
{%- for arg in f.args %}
  {{ arg.1|ty }} {{ arg.0 }}{% call m::comma() %}
{%- endfor %}
) noexcept {
{%- if f.returns.is_some() %}
  auto __vellum_result = ::vellum_export::{{ f.name }}(
{%- for arg in f.args %}
    std::move({{ arg.0 }}){% call m::comma() %}
{%- endfor %}
  );
  return std::move(__vellum_result);
{%- else %}
  ::vellum_export::{{ f.name }}(
{%- for arg in f.args %}
    std::move({{ arg.0 }}){% call m::comma() %}
{%- endfor %}
  );
{%- endif %}
}

{% endfor %}

} // extern "C"
} // namespace vellum_private_abi

#undef VELLUM_ABI
